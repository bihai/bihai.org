

{
    "title": "使用 Git Hook 实现网站的自动部署",
    "date": "0001-01-01 00:00:00 +0000 UTC",
    "type": "posts",
    "permalink" : "https://bihai.org/%E4%BD%BF%E7%94%A8-git-hook-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%99%E7%9A%84%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/",
    "summary" : "自动化能解放人类的双手，而且更重要的是，因为按照规定的流程来走，也减少了很多误操作的产生。不知道大家平时都是怎么样更新自己生产环境的代码的，",
     "img" : "https:/bihai.org/images/masonary-post/post-2.jpg",
        
    "content" :"\u003cp\u003e自动化能解放人类的双手，而且更重要的是，因为按照规定的流程来走，也减少了很多误操作的产生。不知道大家平时都是怎么样更新自己生产环境的代码的，FTP\n覆盖旧文件、服务器定时任务去 build 最新的源码，还是有更高级的做法？\u003c/p\u003e\n\u003cp\u003e目前我在使用 Git Hook 来部署自己的项目。Git Hook 是 Git 提供的一个钩子，能被特定的事件触发后调用。其实，更通俗的讲，当你设置了\nGit Hook 后，只要你的远程仓库收到一次 push 之后，Git Hook 就能帮你执行一次 bash 脚本。\u003c/p\u003e\n\u003cp\u003e下面是我使用 Git Hook 进行简单的自动化部署，可能还有更高级的做法，大家自己去挖掘。\u003c/p\u003e\n\u003cp\u003e在服务器初始化一个远程 Git 仓库\u003c/p\u003e\n\u003cp\u003egit init 和 git –bare init 初始化出来的仓库是完全不一样的，具体我 Google\n了下，英文倒是理解了，但是要翻译出中文却不知道用什么形容词去称呼这2种仓库。\u003c/p\u003e\n\u003cp\u003e这里我们要通过 git –bare init 初始化一个远程仓库\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ cd ~\n$ mkdir testRepo\n$ cd testRepo\n$ git --bare init\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在服务器初始化一个本地 Git 仓库\u003c/p\u003e\n\u003cp\u003e这个仓库就是通过 git init 初始化出来最常见的本地仓库，它的作用是拉去远程仓库（其实就在它旁边）最新的源码，然后在这个仓库里进行编译，把代码编译到\nwww 目录（网站的根目录）。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ cd ~\n$ mkdir testRepo\n$ cd testRepo\n$ git --bare init\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e为远程仓库设置 Hook\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ cd ~/testRepo/hooks\n$ vim post-receive\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003epost-receive 里面的执行脚本\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e#!/bin/sh\nunset GIT_DIR\nDeployPath=/home/user/testDeploy\nWwwPath=/home/wwwroot/testDeploy\ncd $DeployPath\ngit add . -A \u0026amp;\u0026amp; git stash\ngit pull origin master\n# 下面这2步都是按照实际你自己添加的bash脚本\nfis release -Dompd $WwwPath # 我使用的FIS，对前端代码进行编译\nqrsync /home/user/qiniutools/config.json # 使用七牛同步工具进行同步\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e最后，为 post-receive 添加可执行权限\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003echmod +x post-receive\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e为本地仓库添加 remote 源\u003c/p\u003e\n\u003cp\u003e这次的本地仓库就真的是你开发机上面的本地了。在你原有 Git 项目里面添加一条新的 remote 源，以后往这个 remote 源里面 push\n代码就会自动触发上面那 bash 脚本了。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git remote add deploy user@server.ip:/home/user/testRepo\n$ git push deploy master\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"javascript:;\" rel=\"\"\u003e 点赞  \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"javascript:;\" rel=\"\"\u003e 收藏  \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"javascript:;\" rel=\"\"\u003e 分享 \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cpre\u003e\u003ccode\u003e* 文章举报 \n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e \u003cimg\r\n        class=\"lazyload\"\r\n       style=\"width:100%;hight:auto;\" src=\"https://profile.csdnimg.cn/2/1/1/3_thriller\"\r\n        data-srcset=\"https://profile.csdnimg.cn/2/1/1/3_thriller, https://profile.csdnimg.cn/2/1/1/3_thriller 1.5x, https://profile.csdnimg.cn/2/1/1/3_thriller 2x\"\r\n        data-sizes=\"auto\"\r\n        alt=\"https://profile.csdnimg.cn/2/1/1/3_thriller\"\r\n        title=\"https://profile.csdnimg.cn/2/1/1/3_thriller\" /\u003e\n\u003ca href=\"https://blog.csdn.net/thriller\" target=\"_blank\" rel=\"noopener noreffer\"\u003e\u003cimg\r\n        class=\"lazyload\"\r\n       style=\"width:100%;hight:auto;\" src=\"https://g.csdnimg.cn/static/user-reg-year/1x/20.png\"\r\n        data-srcset=\"https://g.csdnimg.cn/static/user-reg-year/1x/20.png, https://g.csdnimg.cn/static/user-reg-year/1x/20.png 1.5x, https://g.csdnimg.cn/static/user-reg-year/1x/20.png 2x\"\r\n        data-sizes=\"auto\"\r\n        alt=\"https://g.csdnimg.cn/static/user-reg-year/1x/20.png\"\r\n        title=\"https://g.csdnimg.cn/static/user-reg-year/1x/20.png\" /\u003e\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://blog.csdn.net/thriller\" target=\"_blank\" rel=\"noopener noreffer\"\u003e thriller \u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e发布了19 篇原创文章  ·  获赞 18  ·  访问量 5万+\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://im.csdn.net/im/main.html?userName=thriller\" target=\"_blank\" rel=\"noopener noreffer\"\u003e 私信 \u003c/a\u003e 关注\u003c/p\u003e\n"}